import streamlit as st
import google.generativeai as genai


# Configura√ß√£o da API Key e Modelo (conforme solicitado)
api_key = "AIzaSyDoZbscReqYZKdyCns26MrvkFFXbtHwWMU" 
genai.configure(api_key=api_key)

try:
    # Utilizando o modelo especificado
    model = genai.GenerativeModel("gemini-2.0-flash")
except Exception as e:
    st.error(f"Erro ao carregar o modelo Gemini 'gemini-2.0-flash': {e}")
    st.info("Verifique se o nome do modelo est√° correto e se sua chave API tem acesso a ele.")
    st.stop()

def gerar_resposta_gemini(prompt_completo):
    try:
        response = model.generate_content(prompt_completo)

        if response.parts:
            return response.text
        else:
            if response.prompt_feedback:
                st.warning(f"O prompt foi bloqueado. Raz√£o: {response.prompt_feedback.block_reason}")
                if response.prompt_feedback.safety_ratings:
                    for rating in response.prompt_feedback.safety_ratings:
                        st.caption(f"Categoria: {rating.category}, Probabilidade: {rating.probability}")
            return "A IA n√£o p√¥de gerar uma resposta para este prompt. Verifique as mensagens acima ou tente reformular seu pedido."
    except Exception as e:
        st.error(f"Erro ao gerar resposta da IA: {str(e)}")
        if hasattr(e, 'message'): # Tenta obter mais detalhes do erro da API do Gemini
            st.error(f"Detalhe da API Gemini: {e.message}")
        return None

# T√≠tulo do aplicativo
st.title("Gerador de Hist√≥rias Interativas com IA üìö‚ú®")
st.markdown("Crie hist√≥rias √∫nicas definindo protagonista, g√™nero e cen√°rio!")

# Entradas do usu√°rio
nome_protagonista = st.text_input("Nome do Protagonista:", placeholder="Ex: Ana, Jo√£o, Zara...")

genero_literario = st.selectbox(
    "Escolha o G√™nero Liter√°rio:",
    ["Fantasia", "Fic√ß√£o Cient√≠fica", "Mist√©rio", "Aventura", "Terror", "Romance", "Drama"]
)

local_inicial = st.radio(
    "Selecione o Local Inicial da Hist√≥ria:",
    [
        "Uma floresta antiga e misteriosa",
        "Uma cidade futurista com torres de cristal",
        "Um castelo assombrado em ru√≠nas",
        "Uma nave espacial √† deriva no cosmos",
        "Uma pequena vila √† beira-mar",
        "Um laborat√≥rio subterr√¢neo abandonado"
    ]
)

frase_desafio = st.text_area(
    "Frase de Efeito ou Desafio Inicial:",
    placeholder="Ex: 'E de repente, tudo ficou escuro.' ou 'O mapa indicava um perigo iminente.' ou 'Uma voz ecoou pelo corredor vazio.'"
)

detalhes_adicionais = st.text_area(
    "Detalhes e Informa√ß√µes Adicionais (opcional):",
    placeholder="Ex: 'O protagonista tem medo de altura', 'A hist√≥ria se passa no s√©culo XVIII', 'Incluir elementos de magia', 'O protagonista possui uma habilidade especial'...",
    help="Campo opcional para adicionar caracter√≠sticas espec√≠ficas do protagonista, √©poca, elementos especiais ou qualquer detalhe que voc√™ gostaria de ver na hist√≥ria."
)

if st.button("Gerar In√≠cio da Hist√≥ria"):
    if not nome_protagonista:
        st.warning("Por favor, informe o nome do protagonista.")
    elif not frase_desafio.strip():
        st.warning("Por favor, adicione uma frase de efeito ou desafio inicial.")
    else:
        # Constru√ß√£o do prompt para gera√ß√£o da hist√≥ria
        prompt_historia = (
            f"Crie o in√≠cio de uma hist√≥ria de '{genero_literario}' com o protagonista chamado '{nome_protagonista}'. "
            f"A hist√≥ria come√ßa em '{local_inicial}'. "
            f"Incorpore a seguinte frase ou desafio no in√≠cio da narrativa: '{frase_desafio}'. "
        )
        
        # Adiciona detalhes adicionais ao prompt se fornecidos
        if detalhes_adicionais.strip():
            prompt_historia += f"Considere tamb√©m os seguintes detalhes e informa√ß√µes adicionais: '{detalhes_adicionais}'. "
        
        prompt_historia += (
            f"Escreva 2-3 par√°grafos que estabele√ßam o cen√°rio, apresentem o protagonista e criem uma atmosfera envolvente "
            f"adequada ao g√™nero '{genero_literario}'. "
            f"Use uma linguagem rica e descritiva que capture a imagina√ß√£o do leitor. "
            f"Termine o in√≠cio da hist√≥ria com um gancho que deixe o leitor curioso para saber o que acontece a seguir."
        )

        st.markdown("---")
        st.markdown("‚öôÔ∏è **Prompt que ser√° enviado para a IA (para fins de aprendizado):**")
        st.text_area("", prompt_historia, height=200)
        st.markdown("---")

        st.info("Aguarde, a IA est√° criando sua hist√≥ria...")
        resposta_ia = gerar_resposta_gemini(prompt_historia)

        if resposta_ia:
            # Armazena a hist√≥ria no session state
            st.session_state.historia_completa = resposta_ia
            st.session_state.historia_gerada = True
            st.session_state.genero_historia = genero_literario
        else:
            st.error("N√£o foi poss√≠vel gerar a hist√≥ria. Verifique as mensagens acima ou tente novamente mais tarde.")

# Exibe a hist√≥ria e op√ß√µes de continua√ß√£o se j√° foi gerada
if 'historia_gerada' in st.session_state and st.session_state.historia_gerada:
    st.markdown("---")
    st.markdown("### üìñ In√≠cio da Hist√≥ria Gerada:")
    st.markdown(st.session_state.historia_completa)
    
    st.markdown("---")
    st.markdown("### ‚úçÔ∏è Continue a Hist√≥ria:")
    
    continuacao_usuario = st.text_area(
        "Escreva como voc√™ gostaria de continuar a hist√≥ria:",
        placeholder="Ex: 'Ent√£o, Maria decidiu abrir a porta misteriosa...' ou 'De repente, um ru√≠do estranho ecoou pela floresta...'",
        help="Digite o que acontece a seguir na hist√≥ria. Seja criativo!",
        key="continuacao_texto"
    )
    
    if st.button("Gerar Continua√ß√£o com IA", key="gerar_continuacao"):
        if continuacao_usuario.strip():
            # Prompt para continua√ß√£o
            prompt_continuacao = (
                f"Aqui est√° o in√≠cio da hist√≥ria que foi gerada anteriormente:\n\n"
                f"{st.session_state.historia_completa}\n\n"
                f"O usu√°rio agora quer continuar a hist√≥ria com o seguinte desenvolvimento:\n"
                f"'{continuacao_usuario}'\n\n"
                f"Continue a narrativa de forma fluida e coerente, mantendo o estilo e tom da hist√≥ria original. "
                f"Escreva 2-3 par√°grafos que desenvolvam a hist√≥ria a partir do ponto onde o usu√°rio continuou. "
                f"Mantenha a atmosfera do g√™nero '{st.session_state.genero_historia}' e termine com outro gancho interessante."
            )
            
            st.info("Aguarde, a IA est√° continuando sua hist√≥ria...")
            continuacao_ia = gerar_resposta_gemini(prompt_continuacao)
            
            if continuacao_ia:
                # Atualiza a hist√≥ria completa
                historia_completa_atual = f"{st.session_state.historia_completa}\n\n**[Sua continua√ß√£o:]** {continuacao_usuario}\n\n{continuacao_ia}"
                st.session_state.historia_completa = historia_completa_atual
                
                st.markdown("### üìñ Continua√ß√£o da Hist√≥ria:")
                st.markdown(continuacao_ia)
            else:
                st.error("N√£o foi poss√≠vel gerar a continua√ß√£o. Tente novamente.")
        else:
            st.warning("Por favor, escreva algo para continuar a hist√≥ria.")
    
    # Bot√£o para mostrar hist√≥ria completa
    if st.button("üìö Mostrar Hist√≥ria Completa", key="mostrar_completa"):
        st.markdown("### üìö Hist√≥ria Completa at√© Agora:")
        st.markdown(st.session_state.historia_completa)
    
    # Bot√£o para reiniciar
    if st.button("üîÑ Criar Nova Hist√≥ria", key="reiniciar"):
        # Limpa o session state
        for key in ['historia_completa', 'historia_gerada', 'genero_historia']:
            if key in st.session_state:
                del st.session_state[key]
        st.rerun()
    
    st.markdown("---")
    st.markdown("### üéØ Dicas:")
    st.info("üí° Voc√™ pode continuar adicionando mais partes √† hist√≥ria quantas vezes quiser! Cada continua√ß√£o ser√° incorporada ao contexto para manter a coer√™ncia narrativa.")